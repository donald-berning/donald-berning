name: VIRP Build/scan; Deploy when environment approved
on:
  push:
    branches:
      - dhb800
env:
  DateTimeBuild: (Get-Date).ToString('yyyyMMdd.HHmm')
  bOffset: 252
jobs:
  Preamble:
    runs-on: windows-latest
    outputs:
      b: ${{ steps.zip.outputs.b }}
      outDateTimeBuild: ${{steps.zip.outputs.outDateTimeBuild}}  
    steps:
      - run: echo "B= $env:b bOffset= $env:bOffset ${{ github.event_name }} DateTimeBuild= $env:DateTimeBuild  ${{ github.ref }} in ${{ github.repository }}."
      - id: Zip
        run: |
          $b = ${{ github.run_number }} + ${{ env.bOffset }}
          echo "::set-output name=b::$b"
          $DateTimeBuild = ${{ env.datetimebuild }}
          echo "::set-output name=outDateTimeBuild::$DateTimeBuild"
          echo " RUN_NUMBER ${{ github.run_number }} b ${{ env.b }} bOffset ${{ env.bOffset }}  build number $b."  
          $DT= (Get-Date).ToString('yyyyMMdd.HHmmss')
          echo "Current $DT DateTimeBuild= $env:DateTimeBuild"

  Build:
    # if: false #skips the step (or job)
    needs: Preamble
    runs-on: windows-latest
    steps:
      - run: echo "outDateTimeBuild=${{needs.Preamble.outputs.outDateTimeBuild}}...    b=${{needs.Preamble.outputs.b}}..."
      - run: echo "ðŸŽ‰ The job was automatically triggered by a ${{ github.event_name }} event for branch ${{ github.ref }} in ${{ github.repository }} for 'GITHUB.RUN_NUMBER = ' ${{ github.run_number }}."
      - id: Zip
        if: false #skips the step (or job)
        run: |
          Compress-Archive -Path c:\DeploymentFiles\VIRP\Builds\DEV\VIRP_SERVICE, c:\DeploymentFiles\VIRP\Builds\DEV\VIRP_WEB, 'c:\DeploymentFiles\VIRP\Builds\DEV\$$ReadMe' -DestinationPath "d:\Deployment Files\VIRP\Builds\DEV\${{needs.Preamble.outputs.outDateTimeBuild}}.deploy.zip"
      - run: echo "-DestinationPath "d:\Deployment Files\VIRP\Builds\DEV\${{needs.Preamble.outputs.outDateTimeBuild}}-${{needs.Preamble.outputs.b}}.deploy.zip""