name: VIRP Build/scan; Deploy when environment approved
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - dhb800
      - HIM_16_profile      
env:
  DateTimeBuild: (Get-Date).ToString('yyyyMMdd.HHmm')
  bOffset: 252
jobs:
  Preamble:
    runs-on: windows-latest
    outputs:
      b: ${{ steps.zip.outputs.b }}
      outDateTimeBuild: ${{steps.zip.outputs.outDateTimeBuild}}  
    steps:
      - run: echo "B= $env:b bOffset= $env:bOffset ${{ github.event_name }} DateTimeBuild= $env:DateTimeBuild  ${{ github.ref }} in ${{ github.repository }}."
      - id: Zip
        run: |
          $b = ${{ github.run_number }} + ${{ env.bOffset }}
          echo "::set-output name=b::$b"
          $DateTimeBuild = ${{ env.datetimebuild }}
          echo "::set-output name=outDateTimeBuild::$DateTimeBuild"
          echo " RUN_NUMBER ${{ github.run_number }} b ${{ env.b }} bOffset ${{ env.bOffset }}  build number $b."  
          $DT= (Get-Date).ToString('yyyyMMdd.HHmmss')
          echo "Current $DT DateTimeBuild= $env:DateTimeBuild"

  Build:
    # if: false #skips the step (or job)
    needs: Preamble
    runs-on: windows-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event for branch ${{ github.ref }} in ${{ github.repository }} for 'GITHUB.RUN_NUMBER = ' ${{ github.run_number }}."
      - name: Check out repository code
      if: false #skips the step (or job)
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          ssh-strict: true
          persist-credentials: true
          lfs: false
      - name: Fetch LFS
      if: false #skips the step (or job)
        run: |
          git lfs fetch origin head
          git lfs checkout
      - name: Build app for release to virp
        if: false #skips the step (or job)
        run: |
          mode con: lines=32766
          $Env:Path += ";C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin"
          $Env:Path += ";C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin"
          $env:path -split ";"
          cd "Registries VIRP Service"
          $env:b = ${{ github.run_number }} + ${{ env.bOffset }}
          echo "Build number $env:b"
          $DateTime = (Get-Date).ToString('yyyyMMdd.HHmm')
          echo $DateTime starting VIRP_SERVICE_DEV
          MSBuild VIRP_SERVICE.csproj -v:minimal /p:DeployOnBuild=true /p:Configuration=Staging /p:PublishProfile=VIRP_SERVICE_DEV
          $DateTime = (Get-Date).ToString('yyyyMMdd.HHmm')
          echo $DateTime starting VIRP_WEB_DEV
          cd ..\"Registries VIRP Web Site"
          MSBuild VIRP_WEB.csproj -v:minimal /p:DeployOnBuild=true /p:Configuration=Staging /p:PublishProfile=VIRP_WEB_DEV
          $DateTime = (Get-Date).ToString('yyyyMMdd.HHmm')
          echo $DateTime starting zip
          cd ..\"Registries VIRP Documentation\DeploymentScripts"
      - id: Zip
        if: false #skips the step (or job)
        run: |
          Compress-Archive -Path c:\DeploymentFiles\VIRP\Builds\DEV\VIRP_SERVICE, c:\DeploymentFiles\VIRP\Builds\DEV\VIRP_WEB, 'c:\DeploymentFiles\VIRP\Builds\DEV\$$ReadMe' -DestinationPath "d:\Deployment Files\VIRP\Builds\DEV\${{needs.Preamble.outputs.outDateTimeBuild}}.deploy.zip"
      - run: echo "-DestinationPath "d:\Deployment Files\VIRP\Builds\DEV\${{needs.Preamble.outputs.outDateTimeBuild}}.deploy.zip""

  Fortify:
    runs-on: windows-latest
    needs: [Build]
    environment: 
      name: Fortify
    steps:
      - name: Fortify scan
        run: |
          mode con: lines=32766
          $Env:Path += ";C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin"
          $Env:Path += ";C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin"
          $env:path -split ";"
          $DateTime = (Get-Date).ToString('yyyyMMdd.HHmm')
          echo $DateTime start Fortify clean
          sourceanalyzer -b VIRP_SOLN -clean
          $DateTime = (Get-Date).ToString('yyyyMMdd.HHmm')
          echo $DateTime start Fortify devenv
          sourceanalyzer -b VIRP_SOLN -Xmx8G -Xss800M devenv "VIRP_SOLN.sln" /Rebuild Debug
          $DateTime = (Get-Date).ToString('yyyyMMdd.HHmm')
          echo $DateTime start Fortify analyze
          sourceanalyzer -b VIRP_SOLN -Xmx8G -Xss800M -scan -f "VIRP_SOLN.fpr"
          $DateTime = (Get-Date).ToString('yyyyMMdd.HHmm')
          echo $DateTime start Fortify copy
      - name: Archive the .fpr file
        run: Copy-Item -path C:\actions-runner\_work\virp-web-site\virp-web-site\VIRP_SOLN.fpr "D:\Deployment Files\fortify\${{needs.Preamble.outputs.outDateTimeBuild}}.fpr"
      - run: echo "-path C:\actions-runner\_work\virp-web-site\virp-web-site\VIRP_SOLN.fpr "D:\Deployment Files\fortify\${{needs.Preamble.outputs.outDateTimeBuild}}.fpr""

  Backup800:
    runs-on: windows-latest
    steps:
      - name: Backup the the running service and web-site
        run: |
          $DateTime = (Get-Date).ToString('yyyyMMdd.HHmm')
          Compress-Archive -Path d:\inetpub\wwwroot\VIRP_SERVICE, d:\inetpub\wwwroot\VIRP_WEB -DestinationPath "d:\Deployment Files\Backup\inetpub\VAAUSWEBCRE800\$DateTime.zip"
  Backup801:
    runs-on: windows-latest
    steps:
      - name: Backup the the running service and web-site
        run: |
          $DateTime = (Get-Date).ToString('yyyyMMdd.HHmm')
          Compress-Archive -Path d:\inetpub\wwwroot\VIRP_SERVICE, d:\inetpub\wwwroot\VIRP_WEB -DestinationPath "d:\Deployment Files\Backup\inetpub\VAAUSWEBCRE801\$DateTime.zip"
  Backup800-2:
    runs-on: windows-latest
    steps:
      - name: Backup the the running service and web-site
        run: |
          $DateTime = (Get-Date).ToString('yyyyMMdd.HHmm')
          Compress-Archive -Path d:\inetpub\wwwroot\VIRP_SERVICE2, d:\inetpub\wwwroot\VIRP_WEB2 -DestinationPath "d:\Deployment Files\Backup\inetpub\VAAUSWEBCRE800-2\$DateTime.2.zip"

  Deploy_Dev800:
    runs-on: windows-latest
    needs: [Build, Backup800]
    steps:
      - name: Clear the running service and web-site
        run: |
          Remove-Item d:\inetpub\wwwroot\VIRP_SERVICE\* -Recurse -Force -ErrorAction Continue
          Remove-Item d:\inetpub\wwwroot\VIRP_WEB\* -Recurse -Force -ErrorAction Continue
      - name: Deploy to Dev
        run: |
          Expand-Archive -Force -Path "\\VAAUSWEBCRE801.aac.dva.va.gov\Deployment Files\VIRP\Builds\DEV\${{needs.Preamble.outputs.outDateTimeBuild}}.deploy.zip" -DestinationPath "d:\inetpub\wwwroot"
          Copy-Item -path 'd:\inetpub\wwwroot\$$ReadMe\appSettings.web800.config' d:\inetpub\wwwroot\VIRP_SERVICE\Config\appSettings.config
          Copy-Item -path 'd:\inetpub\wwwroot\$$ReadMe\Web.Serviceweb800.config' d:\inetpub\wwwroot\VIRP_SERVICE\Web.config
          Copy-Item -path 'd:\inetpub\wwwroot\$$ReadMe\Web.web800.config' d:\inetpub\wwwroot\VIRP_WEB\Web.config
  Deploy_Dev801:
    runs-on: windows-latest
    needs: [Build, Backup801]
    steps:
      - name: Clear the running service and web-site
        run: |
          Remove-Item d:\inetpub\wwwroot\VIRP_SERVICE\* -Recurse -Force -ErrorAction Continue
          Remove-Item d:\inetpub\wwwroot\VIRP_WEB\* -Recurse -Force -ErrorAction Continue
      - name: Deploy to Dev
        run: |
          Expand-Archive -Force -Path "\\VAAUSWEBCRE801.aac.dva.va.gov\Deployment Files\VIRP\Builds\DEV\${{needs.Preamble.outputs.outDateTimeBuild}}.deploy.zip" -DestinationPath "d:\inetpub\wwwroot"
          Copy-Item -path 'd:\inetpub\wwwroot\$$ReadMe\appSettings.web800.config' d:\inetpub\wwwroot\VIRP_SERVICE\Config\appSettings.config
          Copy-Item -path 'd:\inetpub\wwwroot\$$ReadMe\Web.Serviceweb800.config' d:\inetpub\wwwroot\VIRP_SERVICE\Web.config
          Copy-Item -path 'd:\inetpub\wwwroot\$$ReadMe\Web.web801.config' d:\inetpub\wwwroot\VIRP_WEB\Web.config
  Deploy_Dev800-2:
    if: false #skips the step (or job)
    runs-on: windows-latest
    needs: [Build, Backup800-2]
    steps:
      - name: Clear the running service and web-site
        run: |
          Remove-Item d:\inetpub\wwwroot\VIRP_SERVICE2\* -Recurse -Force -ErrorAction Continue
          Remove-Item d:\inetpub\wwwroot\VIRP_WEB2\* -Recurse -Force -ErrorAction Continue
          Expand-Archive -Force -Path "\\VAAUSWEBCRE801.aac.dva.va.gov\Deployment Files\VIRP\Builds\DEV\${{needs.Preamble.outputs.outDateTimeBuild}}.deploy.zip" -DestinationPath d:\inetpub\wwwroot\work2
      - name: Deploy to Dev2 web501
        run: |
          Copy-Item -Recurse -path d:\inetpub\wwwroot\work2\VIRP_SERVICE\* d:\inetpub\wwwroot\VIRP_SERVICE2 -Force
          Copy-Item -Recurse -path d:\inetpub\wwwroot\work2\VIRP_WEB\* d:\inetpub\wwwroot\VIRP_WEB2 -Force
          Copy-Item -path 'd:\inetpub\wwwroot\work2\$$ReadMe\appSettings.web800.config' d:\inetpub\wwwroot\VIRP_SERVICE2\Config\appSettings.config
          Copy-Item -path 'd:\inetpub\wwwroot\work2\$$ReadMe\Web.Serviceweb800.config' d:\inetpub\wwwroot\VIRP_SERVICE2\Web.config
          Copy-Item -path 'd:\inetpub\wwwroot\work2\$$ReadMe\Web.web800.2.config' d:\inetpub\wwwroot\VIRP_WEB2\Web.config
          Remove-Item d:\inetpub\wwwroot\work2 -Recurse



  Backup500:
    runs-on: 'web500'
    # if: github.event_name == 'pull_request'
    environment:
      name: SQA
    steps:
      - name: Backup the the running service and web-site
        run: |
          $DateTime = (Get-Date).ToString('yyyyMMdd.HHmm')
          Compress-Archive -Path d:\inetpub\wwwroot\VIRP_SERVICE, d:\inetpub\wwwroot\VIRP_WEB -DestinationPath "d:\Deployment Files\Backup\inetpub\VAAUSWEBCRE500\$DateTime.zip"
  Backup501:
    runs-on: 'web501'
    # if: github.event_name == 'pull_request'
    environment:
      name: SQA
    steps:
      - name: Backup the the running service and web-site
        run: |
          $DateTime = (Get-Date).ToString('yyyyMMdd.HHmm')
          Compress-Archive -Path d:\inetpub\wwwroot\VIRP_SERVICE, d:\inetpub\wwwroot\VIRP_WEB -DestinationPath "d:\Deployment Files\Backup\inetpub\VAAUSWEBCRE501\$DateTime.zip"
  Backup500-2:
    # if: false #skips the step (or job)
    runs-on: 'web500'
    # if: github.event_name == 'pull_request'
    environment:
      name: SQA2
    steps:
      - name: Backup the the running service and web-site
        run: |
          $DateTime = (Get-Date).ToString('yyyyMMdd.HHmm')
          Compress-Archive -Path d:\inetpub\wwwroot\VIRP_SERVICE2, d:\inetpub\wwwroot\VIRP_WEB2 -DestinationPath "d:\Deployment Files\Backup\inetpub\VAAUSWEBCRE500\$DateTime.2.zip"


  Deploy_SQA500:
    runs-on: 'web500'
    needs: [Build, Backup500]
    # if: github.event_name == 'pull_request'
    environment:
      name: SQAd
    steps:
      - name: Clear the running service and web-site
        run: |
          Remove-Item d:\inetpub\wwwroot\VIRP_SERVICE\* -Recurse -Force -ErrorAction Continue
          Remove-Item d:\inetpub\wwwroot\VIRP_WEB\* -Recurse -Force -ErrorAction Continue
      - name: Deploy to SQA web500
        run: |
          Expand-Archive -Force -Path "\\VAAUSWEBCRE801.aac.dva.va.gov\Deployment Files\VIRP\Builds\DEV\${{needs.Preamble.outputs.outDateTimeBuild}}.deploy.zip" -DestinationPath "d:\inetpub\wwwroot"
          Copy-Item -path 'd:\inetpub\wwwroot\$$ReadMe\appSettings.web500.config' d:\inetpub\wwwroot\VIRP_SERVICE\Config\appSettings.config
          Copy-Item -path 'd:\inetpub\wwwroot\$$ReadMe\Web.Serviceweb500.config' d:\inetpub\wwwroot\VIRP_SERVICE\Web.config
          Copy-Item -path 'd:\inetpub\wwwroot\$$ReadMe\Web.web500.config' d:\inetpub\wwwroot\VIRP_WEB\Web.config
  Deploy_SQA501:
    # if: false #skips the step (or job)
    runs-on: 'web501'
    needs: [Build, Backup501]
    # if: github.event_name == 'pull_request'
    environment:
      name: SQAd
    steps:
      - name: Clear the running service and web-site
        run: |
          Remove-Item d:\inetpub\wwwroot\VIRP_SERVICE\* -Recurse -Force -ErrorAction Continue
          Remove-Item d:\inetpub\wwwroot\VIRP_WEB\* -Recurse -Force -ErrorAction Continue
      - name: Deploy to SQA web501
        run: |
          Expand-Archive -Force -Path "\\VAAUSWEBCRE801.aac.dva.va.gov\Deployment Files\VIRP\Builds\DEV\${{needs.Preamble.outputs.outDateTimeBuild}}.deploy.zip" -DestinationPath "d:\inetpub\wwwroot"
          Copy-Item -path 'd:\inetpub\wwwroot\$$ReadMe\appSettings.web500.config' d:\inetpub\wwwroot\VIRP_SERVICE\Config\appSettings.config
          Copy-Item -path 'd:\inetpub\wwwroot\$$ReadMe\Web.Serviceweb500.config' d:\inetpub\wwwroot\VIRP_SERVICE\Web.config
          Copy-Item -path 'd:\inetpub\wwwroot\$$ReadMe\Web.web501.config' d:\inetpub\wwwroot\VIRP_WEB\Web.config
  Deploy_SQA-2:
    # if: false #skips the step (or job)
    runs-on: 'web500'
    # if: github.event_name == 'pull_request'
    needs: [Build, Backup500-2]
    environment:
      name: SQA2d
    steps:
      - name: Clear the running service and web-site
        run: |
          Remove-Item d:\inetpub\wwwroot\VIRP_SERVICE2\* -Recurse -Force -ErrorAction Continue
          Remove-Item d:\inetpub\wwwroot\VIRP_WEB2\* -Recurse -Force -ErrorAction Continue
      - name: Deploy to SQA2 web501
        run: |
          Expand-Archive -Force -Path "\\VAAUSWEBCRE801.aac.dva.va.gov\Deployment Files\VIRP\Builds\DEV\${{needs.Preamble.outputs.outDateTimeBuild}}.deploy.zip" -DestinationPath d:\inetpub\wwwroot\work2
          Copy-Item -Recurse -path d:\inetpub\wwwroot\work2\VIRP_SERVICE\* d:\inetpub\wwwroot\VIRP_SERVICE2 -Force
          Copy-Item -Recurse -path d:\inetpub\wwwroot\work2\VIRP_WEB\* d:\inetpub\wwwroot\VIRP_WEB2 -Force
          Remove-Item d:\inetpub\wwwroot\work2 -Recurse
          Copy-Item -path 'd:\inetpub\wwwroot\work2\$$ReadMe\appSettings.web500.2.config' d:\inetpub\wwwroot\VIRP_SERVICE2\Config\appSettings.config
          Copy-Item -path 'd:\inetpub\wwwroot\work2\$$ReadMe\Web.Serviceweb500.2.config' d:\inetpub\wwwroot\VIRP_SERVICE2\Web.config
          Copy-Item -path 'd:\inetpub\wwwroot\work2\$$ReadMe\Web.web500.2.config' d:\inetpub\wwwroot\VIRP_WEB2\Web.config


  Stage_PPD:
    runs-on: windows-latest
    if: github.event_name == 'pull_request'
    needs: [Build] # , Fortify, Deploy_SQA500]
    environment:
      name: PPD
    steps:
      - name: Backup the the previous deployment
        run: |
          $DateTime = (Get-Date).ToString('yyyyMMdd.HHmm')
          Compress-Archive -Path d:\DeploymentFiles\VIRP\Builds\PPD\WEB40, d:\DeploymentFiles\VIRP\Builds\PPD\WEB41 -DestinationPath "d:\DeploymentFiles\VIRP\Builds\PPD\$DateTime.zip"
          echo Backup:  d:\Deployment Files\VIRP\Builds\PPD\$DateTime.zip  for build ${{ github.run_number }}
      - name: Clear the staging service and web-site
        run: |
          Remove-Item d:\DeploymentFiles\VIRP\Builds\PPD\WEB40\* -Recurse -Force -ErrorAction Continue
          Remove-Item d:\DeploymentFiles\VIRP\Builds\PPD\WEB41\* -Recurse -Force -ErrorAction Continue
      - name: Stage for PPD
        run: |
          Expand-Archive -Path "d:\Deployment Files\VIRP\Builds\DEV\${{needs.Preamble.outputs.outDateTimeBuild}}.deploy.zip" -DestinationPath "d:\DeploymentFiles\VIRP\Builds\PPD\WEB40"
          Copy-Item -path 'd:\DeploymentFiles\VIRP\Builds\PPD\WEB40\$$ReadMe\appSettings.web40.config' d:\DeploymentFiles\VIRP\Builds\PPD\WEB40\VIRP_SERVICE\Config\appSettings.config
          Copy-Item -path 'd:\DeploymentFiles\VIRP\Builds\PPD\WEB40\$$ReadMe\Web.Serviceweb40.config' d:\DeploymentFiles\VIRP\Builds\PPD\WEB40\VIRP_SERVICE\Web.config
          Copy-Item -path 'd:\DeploymentFiles\VIRP\Builds\PPD\WEB40\$$ReadMe\Web.web40.config' d:\DeploymentFiles\VIRP\Builds\PPD\WEB40\VIRP_WEB\Web.config
          Copy-Item -Recurse -path d:\DeploymentFiles\VIRP\Builds\PPD\WEB40\* d:\DeploymentFiles\VIRP\Builds\PPD\WEB41 -Force
          Copy-Item -path 'd:\DeploymentFiles\VIRP\Builds\PPD\WEB41\$$ReadMe\appSettings.web40.config' d:\DeploymentFiles\VIRP\Builds\PPD\WEB41\VIRP_SERVICE\Config\appSettings.config
          Copy-Item -path 'd:\DeploymentFiles\VIRP\Builds\PPD\WEB41\$$ReadMe\Web.Serviceweb40.config' d:\DeploymentFiles\VIRP\Builds\PPD\WEB41\VIRP_SERVICE\Web.config
          Copy-Item -path 'd:\DeploymentFiles\VIRP\Builds\PPD\WEB41\$$ReadMe\Web.web41.config' d:\DeploymentFiles\VIRP\Builds\PPD\WEB41\VIRP_WEB\Web.config
      - run: echo "🍏 This job's status is ${{ job.status }}.  Deploy"
  Stage_PRD:
    runs-on: windows-latest
    # if: github.event_name == 'pull_request'
    needs: [Build, Stage_PPD]
    environment:
      name: PRD
    steps:
      - name: Backup the the previous deployment
        run: |
          $DateTime = (Get-Date).ToString('yyyyMMdd.HHmm')
          Compress-Archive -Path d:\DeploymentFiles\VIRP\Builds\PRD\WEB20, d:\DeploymentFiles\VIRP\Builds\PRD\WEB21 -DestinationPath "d:\DeploymentFiles\VIRP\Builds\PRD\$DateTime.zip"
          echo Backup:  d:\Deployment Files\VIRP\Builds\PRD\$DateTime.zip  for build ${{ github.run_number }}
      - name: Clear the staging service and web-site
        run: |
          Remove-Item d:\DeploymentFiles\VIRP\Builds\PRD\WEB20\* -Recurse
          Remove-Item d:\DeploymentFiles\VIRP\Builds\PRD\WEB21\* -Recurse
      - name: Stage for PRD
        run: |
          Expand-Archive -Path "d:\Deployment Files\VIRP\Builds\DEV\${{needs.Preamble.outputs.outDateTimeBuild}}.deploy.zip" -DestinationPath "d:\DeploymentFiles\VIRP\Builds\PRD\WEB20"
          Copy-Item -path 'd:\DeploymentFiles\VIRP\Builds\PRD\WEB20\$$ReadMe\appSettings.WEB20.config' d:\DeploymentFiles\VIRP\Builds\PRD\WEB20\VIRP_SERVICE\Config\appSettings.config
          Copy-Item -path 'd:\DeploymentFiles\VIRP\Builds\PRD\WEB20\$$ReadMe\Web.ServiceWEB20.config' d:\DeploymentFiles\VIRP\Builds\PRD\WEB20\VIRP_SERVICE\Web.config
          Copy-Item -path 'd:\DeploymentFiles\VIRP\Builds\PRD\WEB20\$$ReadMe\Web.WEB20.config' d:\DeploymentFiles\VIRP\Builds\PRD\WEB20\VIRP_WEB\Web.config
          Copy-Item -Recurse -path d:\DeploymentFiles\VIRP\Builds\PRD\WEB20\* d:\DeploymentFiles\VIRP\Builds\PRD\WEB21 -Force
          Copy-Item -path 'd:\DeploymentFiles\VIRP\Builds\PRD\WEB21\$$ReadMe\appSettings.WEB20.config' d:\DeploymentFiles\VIRP\Builds\PRD\WEB21\VIRP_SERVICE\Config\appSettings.config
          Copy-Item -path 'd:\DeploymentFiles\VIRP\Builds\PRD\WEB21\$$ReadMe\Web.ServiceWEB20.config' d:\DeploymentFiles\VIRP\Builds\PRD\WEB21\VIRP_SERVICE\Web.config
          Copy-Item -path 'd:\DeploymentFiles\VIRP\Builds\PRD\WEB21\$$ReadMe\Web.WEB21.config' d:\DeploymentFiles\VIRP\Builds\PRD\WEB21\VIRP_WEB\Web.config
      - run: echo "🍏 This job's status is ${{ job.status }}.  Deploy"
