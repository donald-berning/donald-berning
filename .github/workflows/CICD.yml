name: CI + CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  DateTimeBuild: (Get-Date).ToString('yyyyMMdd.HHmm')
  b: ${{ github.run_number }}
  bOffset: 216

jobs:
  Preamble:
    runs-on: windows-latest
    outputs:
      b: ${{ steps.zip.outputs.b }}
      outDateTimeBuild: ${{steps.zip.outputs.outDateTimeBuild}}  
    steps:
      - run: echo "B= $env:b bOffset= $env:bOffset ${{ github.event_name }} DateTimeBuild= $env:DateTimeBuild  ${{ github.ref }} in ${{ github.repository }}."
      - id: Zip
        run: |
          $b = ${{ github.run_number }} + ${{ env.bOffset }}
          echo "::set-output name=b::$b"
          $DateTimeBuild = ${{ env.datetimebuild }}
          echo "::set-output name=outDateTimeBuild::$DateTimeBuild"
          echo "RUN_NUMBER ${{ github.run_number }} b ${{ env.b }} bOffset ${{ env.bOffset }}  build number $b."  
          $DT= (Get-Date).ToString('yyyyMMdd.HHmmss')
          echo "Current $DT DateTimeBuild= $env:DateTimeBuild"

  Build:
    # if: false #skips the step (or job)
    needs: Preamble
    runs-on: windows-latest
    outputs:
      outDateTimeBuild: ${{steps.zip.outputs.outDateTimeBuild}}   
    steps:
      - run: echo "b= ${{needs.Preamble.outputs.b}}"
      - uses: actions/checkout@v2
      - run: dir
      - run: echo "github.workspace ${{github.workspace}}"
      - id: Zip
        run: |
          $env:b = ${{ github.run_number }} + ${{ env.bOffset }}
          echo "github.run_number ${{ github.run_number }} and Build number $env:b"
          $DateTimeBuild = ${{ env.datetimebuild }}
          echo "::set-output name=outDateTimeBuild::$DateTimeBuild"
          echo "---$DateTimeBuild---  ---${{ env.datetimebuild }}---"
          $DT=(Get-Date).ToString('yyyyMMdd.HHmmss')      
          echo "Current $DT DateTimeBuild= $DateTimeBuild"
    
  DeployDev:
    name: Deploy to Dev 
    needs: [Build]
    runs-on: windows-latest
    environment: 
      name: Development
      url: 'http://dev.myapp.com'
    steps:
      - run: echo "github.workspace ${{github.workspace}}"
      - name: Deploy
        run: echo "datetimebuild ${{needs.Build.outputs.outDateTimeBuild}}"
      - run: echo "github.run_number ${{ github.run_number }}  build number ${{ env.b }}  DateTimeBuild  ${{ env.DateTimeBuild }}"
      - run: |
          echo Expand-Archive -Path "\\VAAUSCREWEB80.aac.dva.va.gov\DeploymentFiles\VIRP\Builds\DEV\${{needs.Build.outputs.outDateTimeBuild}}.deploy.zip" -DestinationPath "\\VAAUSCREWEB50.aac.dva.va.gov\d$\inetpub\wwwroot"
          $DT=(Get-Date).ToString('yyyyMMdd.HHmmss')      
          echo "Current $DT DateTimeBuild= ${{needs.Build.outputs.outDateTimeBuild}} "

      - name: Deploy2
        # ${{ env.datetimebuild }} is undefined in later jobs, grrr.
        run: echo "datetimebuild ${{needs.Build.outputs.outDateTimeBuild}} or ${{ env.datetimebuild }}"
      - run: echo "Current $DT DateTimeBuild= $DateTimeBuild"


  DeployStaging:
    name: Deploy to Staging 
    if: github.event_name == 'pull_request'
    needs: [Build]
    runs-on: ubuntu-latest
    environment: 
      name: Staging
      url: 'http://test.myapp.com'
    steps:
      - name: Deploy
        run: echo ${{needs.Build.outputs.output1}} ${{needs.Build.outputs.output2}} ${{needs.Build.outputs.outDateTimeBuild}} github.run_number ${{ github.run_number }}   
      - run: echo I am deploying! 
            
  DeployProd:
    name: Deploy to Production 
    if: github.event_name == 'pull_request'
    needs: [DeployStaging]
    runs-on: ubuntu-latest
    environment: 
      name: Production
      url: 'http://www.myapp.com'
    steps:
      - name: Deploy
        run: echo ${{needs.Build.outputs.output1}} ${{needs.Build.outputs.output2}} ${{needs.Build.outputs.outDateTimeBuild}} github.run_number ${{ github.run_number }}       
      - run: echo I am deploying! 
